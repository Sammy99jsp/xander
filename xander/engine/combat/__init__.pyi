import typing
from xander.engine.actors import Stats
from xander.engine.combat.arena import Arena, ProtoArena
from xander.engine.combat.turn import Turn

class Combatant:
    @property
    def name(self) -> str: ...

    @property
    def position(self) -> tuple[float, float, float]: ...

    @property
    def stats(self) -> Stats: ...

    def __repr__(self) -> str: ...

    def __eq__(self, value): ...

CombatantHook = typing.Callable[[Turn], typing.Any]

class Combat:
    # TODO: add ordering=None to the signature !
    def __init__(self, arena: ProtoArena): ...

    @property
    def arena(self) -> Arena: ...

    def join(self, monster: Stats, name: str, position: tuple[float, float, float]) -> Combatant: ...

    def step(self): ...

    def __repr__(self) -> str: ...

    def _repr_html_(self) -> str: ...

    def set_combatant_hook(self, combatant: Combatant, hook: CombatantHook): ...

    @property
    def current(self) -> Combatant: ...

